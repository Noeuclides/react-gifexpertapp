{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","image","className","src","alt","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","setCategories","ReactDOM","render","document","getElementById"],"mappings":"2MAgCeA,EA7BK,SAAC,GAAmC,IAAhCC,EAA+B,EAA/BA,YAA+B,KAAlBC,WAEGC,mBAAS,KAFM,mBAE5CC,EAF4C,KAEhCC,EAFgC,KAcnD,OACI,sBAAMC,SATW,SAAEC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BT,GAAa,SAAAU,GAAI,OAAMP,GAAN,mBAAqBO,OACtCN,EAAe,MAKnB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAhBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,QCLnBG,EAAe,SAAC,GAAyB,EAAvBC,GAAwB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACtC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAQG,IAAMJ,IACzB,4BAAKA,Q,uBCNJK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DACH,mCACC,uCACXC,EAHa,UAEF,uCAFE,oBACH,mCADG,cAG8BC,UAAUH,GAHxC,sBAIII,MAAMF,GAJV,cAIbG,EAJa,gBAKIA,EAASC,OALb,uBAKXC,EALW,EAKXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,MAAK,UAAEe,EAAIC,cAAN,aAAE,EAAYC,iBAAiBV,QAVzB,kBAaZM,GAbY,4CAAH,sDC4BLK,EAtBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EAEZrB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAXAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,UAMlBC,EDb2BK,CAAcpB,GAAlCW,EAFgB,EAEtBJ,KAAcO,EAFQ,EAERA,QAEtB,OACI,qCACI,oBAAIlB,UAAU,oCAAd,SAAmDI,IAChDc,GAAW,mBAAGlB,UAAU,2CAAb,qBACd,qBAAKA,UAAU,YAAf,SAEQe,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIjB,aEUvB4B,EAxBM,WAAM,MAGa1C,mBAAS,CAAC,gBAHvB,mBAGhBD,EAHgB,KAGJ4C,EAHI,KAKvB,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAa7C,YAAc6C,EAAgB5C,WAAaA,IACxD,6BAEQA,EAAW+B,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCblCuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ad3355d3.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ( { setCategory, categories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategory( cats => [ inputValue, ...cats ] );\n            setInputValue( '' );    \n        };\n    }\n\n    return (\n        <form onSubmit={Â handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            ></input>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategory: PropTypes.func.isRequired,\n}\n\nexport default AddCategory\n","import React from 'react'\n\nexport const GifGridItem = (({ id, title, image }) => {\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={ image } alt={ title } />\n            <p>{ title }</p>\n        </div>\n\n    )\n}\n)\n","export const getGifs = async ( category ) => {\n    const api_key = 'uGhUW6XOe6CGwJE4vDbQAVmAEnljOh6x';\n    const endpoint = 'https://api.giphy.com/v1/gifs/search';\n    const url = `${endpoint}?api_key=${api_key}&q=${ encodeURI(category) }&limit=10`;\n    const response = await fetch(url);\n    const { data } = await response.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            image: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { GifGridItem } from './GifGridItem';\nimport { getGifs } from '../helpers/getGifs'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {  loading && <p className=\"animate__animated animate__bounceInRight\">Loading</p> }\n            <div className=\"card-grid\">\n                {\n                    images.map( img => (\n                        <GifGridItem\n                            key={ img.id } \n                            { ...img } \n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    })\n\n\n    return state;\n}\n\n\n","import React, { useState } from 'react';\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Super campeones', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['Dragon Ball']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <hr/>\n            <AddCategory setCategory={ setCategories } categories={ categories }  />\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid\n                            key={ category }\n                            category={ category }\n                            />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}